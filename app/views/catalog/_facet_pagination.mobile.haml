%nav.facet_more_a_to_z_navigation
	/
		- if a_to_z_pagination
			- if pagination.prefix
				%span.a_to_z_facet
					=link_to('All', catalog_facet_path(params))
			- else
				%span.a_to_z_facet
					%b All
			&nbsp;
		
			- ("a".."z").each do |alphabet|
				- paginator_alphabet = a_to_z_pagination.items.find { |item| item.value==alphabet }
				- if paginator_alphabet
					- if pagination.prefix and pagination.prefix.downcase.include? paginator_alphabet.value
						%span.a_to_z_facet
							%b= paginator_alphabet.value.upcase
							%span.facet_number= paginator_alphabet.hits
					- else
						%span.a_to_z_facet
							= render_a_to_z_facet_value(Blacklight.config[:facet][:a_to_z][params["id"]], paginator_alphabet)
				- else
					%span.a_to_z_facet.inactive= alphabet.upcase

%nav.facet_more_navigation
	- if pagination.has_previous? || pagination.has_next?
		- if pagination.has_previous?
			= link_to('« Previous', catalog_facet_path( pagination.params_for_previous_url( params) ), :class=>:prev_page)
		- else		
			%span.disabled.ui-state-active.prev_page « Previous
		- if pagination.has_next?
			= link_to('Next »', catalog_facet_path( pagination.params_for_next_url({:q=>params[:q], :f=>params[:f], :"catalog_facet.offset"=>params[:"catalog_facet.offset"]})), :class => :next_page )
			-#= pagination.params_for_next_url(params).inspect
		- else
			%span.disabled.ui-state-active.next_page Next »
		&nbsp;
	- if !pagination.prefix	
		- if pagination.sort == 'index'
			Sort by:
			%span.small 
				%b A-Z
			= link_to_unless(pagination.sort == 'count', "Relevance", pagination.params_for_resort_url('count', params), :class => "small sort_change numeric")

		- elsif pagination.sort == 'count'
			Sort by:
			= link_to("A-Z", pagination.params_for_resort_url('index', params), :class => "small sort_change az")
			%span.small 
				%b Relevance